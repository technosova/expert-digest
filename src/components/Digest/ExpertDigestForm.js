import React, { useState, useEffect } from 'react';
import { Input, Button, Form, Typography, notification } from 'antd';
import { gapi } from 'gapi-script';

const { TextArea } = Input;
const { Title } = Typography;

const API_KEY = 'AIzaSyBcd5_84w91WHOK_OCiwnOL8L5WhMXyAa0';
const CLIENT_ID = '443926305689-3holk18bjkd54b21gi58i54r3e5a10th.apps.googleusercontent.com';
const SPREADSHEET_ID = '1xvVKJjQoO4Jk_i_nOvEIGR3O-wdDPuQ0w8OCPzawqZE'; // ID —Ç–∞–±–ª–∏—Ü—ã
const SPREADSHEET_LINK = `https://docs.google.com/spreadsheets/d/${SPREADSHEET_ID}/edit?gid=0#gid=0`;
const RANGE = "'–õ–∏—Å—Ç1'!A2:E"; // –ò–º—è –ª–∏—Å—Ç–∞ + –¥–∏–∞–ø–∞–∑–æ–Ω –¥–∞–Ω–Ω—ã—Ö

const initializeGAPI = () => {
  return gapi.client.init({
    apiKey: API_KEY,
    clientId: CLIENT_ID,
    discoveryDocs: ["https://sheets.googleapis.com/$discovery/rest?version=v4"],
    scope: "https://www.googleapis.com/auth/spreadsheets.readonly",
  });
};

const ExpertDigestForm = () => {
  const [digestNumber, setDigestNumber] = useState('');
  const [newExperts, setNewExperts] = useState('');
  const [featuredExperts, setFeaturedExperts] = useState('');
  const [bannedExperts, setBannedExperts] = useState('');
  const [removedExperts, setRemovedExperts] = useState('');
  const [finalMessage, setFinalMessage] = useState('');
  const [isGapiInitialized, setIsGapiInitialized] = useState(false);

  useEffect(() => {
    gapi.load('client', async () => {
      try {
        await initializeGAPI();
        setIsGapiInitialized(true);
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ GAPI:', error);
      }
    });
  }, []);

  const fetchDigestData = async () => {
    try {
      const response = await gapi.client.sheets.spreadsheets.values.get({
        spreadsheetId: SPREADSHEET_ID,
        range: RANGE, // –£–∫–∞–∑—ã–≤–∞–µ–º –¥–∏–∞–ø–∞–∑–æ–Ω —Å –∏–º–µ–Ω–µ–º –ª–∏—Å—Ç–∞
      });

      const values = response.result.values;

      console.log('–ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã:', values);

      if (values) {
        // –ù–∞—Ö–æ–¥–∏–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ —Å—Ç–æ–ª–±—Ü–µ A (–Ω–æ–º–µ—Ä–∞ –¥–∞–π–¥–∂–µ—Å—Ç–æ–≤)
        const maxDigestNumber = Math.max(
          ...values.map(row => Number(row[0] || 0)) // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –≤ —á–∏—Å–ª–∞
        );

        setDigestNumber(maxDigestNumber); // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –≤ –∏–Ω–ø—É—Ç

        // –§–∏–ª—å—Ç—Ä—É–µ–º —Å—Ç—Ä–æ–∫–∏, –≥–¥–µ –Ω–æ–º–µ—Ä –¥–∞–π–¥–∂–µ—Å—Ç–∞ —Ä–∞–≤–µ–Ω –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–º—É
        const filteredRows = values.filter(row => Number(row[0]) === maxDigestNumber);

        if (filteredRows.length > 0) {
          // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å—Ç–æ–ª–±—Ü—ã B, C, D, E
          const newExpertsData = filteredRows.map(row => row[1] || '').filter(Boolean).join('\n');
          const featuredExpertsData = filteredRows.map(row => row[2] || '').filter(Boolean).join('\n');
          const bannedExpertsData = filteredRows.map(row => row[3] || '').filter(Boolean).join('\n');
          const removedExpertsData = filteredRows.map(row => row[4] || '').filter(Boolean).join('\n');

          // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –ø–æ–ª—è
          setNewExperts(newExpertsData);
          setFeaturedExperts(featuredExpertsData);
          setBannedExperts(bannedExpertsData);
          setRemovedExperts(removedExpertsData);

          notification.success({
            message: '–î–∞–Ω–Ω—ã–µ –ø–æ–¥–≥—Ä—É–∂–µ–Ω—ã',
            description: `–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –¥–ª—è –¥–∞–π–¥–∂–µ—Å—Ç–∞ #${maxDigestNumber} —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–∞.`,
          });
        } else {
          notification.warning({
            message: '–î–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã',
            description: `–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥–∞–π–¥–∂–µ—Å—Ç–∞ #${maxDigestNumber}.`,
          });
        }
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ Google Sheets:', error);
      notification.error({
        message: '–û—à–∏–±–∫–∞',
        description: '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ Google Sheets.',
      });
    }
  };

  const generateMessage = () => {
    const defaultNewExpertsMessage = "–ò—Ç–∞–∫, –Ω–∞ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–µ –≤ —Ä—è–¥—ã –Ω–∞—à–∏—Ö —ç–∫—Å–ø–µ—Ä—Ç–æ–≤ –Ω–∏–∫—Ç–æ –Ω–µ –≤—Å—Ç—É–ø–∏–ª, –Ω–æ –æ–∂–∏–¥–∞–µ–º –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –Ω–∞ —Å–ª–µ–¥—É—é—â–µ–π)";
    const defaultFeaturedExpertsMessage = "–ò–¥–µ–º –¥–∞–ª–µ–µ, –Ω–∞ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–µ —É –¥–µ–π—Å—Ç–≤—É—é—â–∏—Ö —ç–∫—Å–ø–µ—Ä—Ç–æ–≤ –Ω–µ –±—ã–ª–æ –Ω–æ–≤–æ—Å—Ç–µ–π ü§ì";
    const defaultRemovedExpertsMessage = "–ù–∞ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–µ —É –Ω–∞—Å –Ω–µ –±—ã–ª–æ –æ—Ç–∫–ª—é—á–µ–Ω–∏–πü•≥";

    let message = `–≠–∫—Å–ø–µ—Ä—Ç–Ω—ã–π –¥–∞–π–¥–∂–µ—Å—Ç #${digestNumber} üî•\n\n` +
      "–ù–∞ –∫–∞–ª–µ–Ω–¥–∞—Ä–µ –ø—è—Ç–Ω–∏—Ü–∞, –∞ —ç—Ç–æ –∑–Ω–∞—á–∏—Ç, —á—Ç–æ –ø–æ–¥—ä–µ—Ö–∞–ª –Ω–æ–≤—ã–π –≤—ã–ø—É—Å–∫ –≥–æ—Ä—è—á–∏—Ö –Ω–æ–≤–æ—Å—Ç–µ–π –æ –Ω–∞—à–∏—Ö –ø–∞—Ä—Ç–Ω–µ—Ä–∞—Ö. –ü—Ä–∏—Å–∞–∂–∏–≤–∞–π—Ç–µ—Å—å –ø–æ—É–¥–æ–±–Ω–µ–µüçøüòé\n\n" +
      `${newExperts.trim() ? `**–ò—Ç–∞–∫, –Ω–∞ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–µ –≤ —Ä—è–¥—ã –Ω–∞—à–∏—Ö —ç–∫—Å–ø–µ—Ä—Ç–æ–≤ –≤—Å—Ç—É–ø–∏–ª–∏:**\n${newExperts}` : defaultNewExpertsMessage}\n\n` +
      `${featuredExperts.trim() ? `**–ò–¥–µ–º –¥–∞–ª–µ–µ, –Ω–æ–≤–æ—Å—Ç–∏ –ø—Ä–æ –¥–µ–π—Å—Ç–≤—É—é—â–∏—Ö —ç–∫—Å–ø–µ—Ä—Ç–æ–≤ ü§ì**\n${featuredExperts}` : defaultFeaturedExpertsMessage}\n\n`;

    if (bannedExperts.trim()) {
      message += `**–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–∞ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–µ —É –Ω–∞—Å –±—ã–ª–∏ –±–∞–Ω—ã:**\n${bannedExperts}\n\n`;
    }

    message += `${removedExperts.trim() ? `**–ò –Ω–∞–ø–æ—Å–ª–µ–¥–æ–∫, —Ç–µ, —Å –∫–µ–º –º—ã —Ä–∞—Å—Å—Ç–∞–ª–∏—Å—å:**\n${removedExperts}` : defaultRemovedExpertsMessage}\n\n` +
      "**–î–æ –≤—Å—Ç—Ä–µ—á–∏ –≤ —Å–ª–µ–¥—É—é—â—É—é –ø—è—Ç–Ω–∏—Ü—É!üî•**";

    setFinalMessage(message);
  };

  const copyToClipboard = (text) => {
    const tempElement = document.createElement('textarea');
    tempElement.value = text;
    document.body.appendChild(tempElement);
    tempElement.select();
    document.execCommand('copy');
    document.body.removeChild(tempElement);

    notification.success({
      message: '–£—Å–ø–µ—Ö!',
      description: '–ò—Ç–æ–≥–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–æ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞.',
    });
  };

  return (
    <div style={{ padding: '20px' }}>
      <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>
        <Title level={2}>–≠–∫—Å–ø–µ—Ä—Ç–Ω—ã–π –¥–∞–π–¥–∂–µ—Å—Ç</Title>
        <Button
          type="link"
          href={SPREADSHEET_LINK}
          target="_blank"
          style={{ fontSize: '16px', marginLeft: '10px' }}
        >
          –û—Ç–∫—Ä—ã—Ç—å Google –¢–∞–±–ª–∏—Ü—É
        </Button>
      </div>

      <Form layout="vertical">
        <Form.Item 
          label="–ù–æ–º–µ—Ä –¥–∞–π–¥–∂–µ—Å—Ç–∞:"
          required
        >
          <Input 
            value={digestNumber} 
            onChange={(e) => setDigestNumber(e.target.value)} 
            placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –¥–∞–π–¥–∂–µ—Å—Ç–∞"
            disabled // –ü–æ–ª–µ –æ—Ç–∫–ª—é—á–µ–Ω–æ, —Ç–∞–∫ –∫–∞–∫ –∑–Ω–∞—á–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
          />
          <Button 
            type="default" 
            onClick={fetchDigestData} 
            style={{ marginTop: '10px' }}
            disabled={!isGapiInitialized}
          >
            –ü–æ–¥–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ Google Sheets
          </Button>
        </Form.Item>

        <Form.Item label="–í —Ä—è–¥—ã —ç–∫—Å–ø–µ—Ä—Ç–æ–≤ –≤—Å—Ç—É–ø–∏–ª–∏:">
          <TextArea 
            value={newExperts} 
            onChange={(e) => setNewExperts(e.target.value)} 
            rows={5} 
            placeholder="–í–≤–µ–¥–∏—Ç–µ –∏–º–µ–Ω–∞ –Ω–æ–≤—ã—Ö —ç–∫—Å–ø–µ—Ä—Ç–æ–≤ –∏ –∏—Ö —É—Å–ª—É–≥–∏"
          />
        </Form.Item>

        <Form.Item label="–ì–µ—Ä–æ—è–º–∏ –≤—ã–ø—É—Å–∫–∞ —Å—Ç–∞–ª–∏:">
          <TextArea 
            value={featuredExperts} 
            onChange={(e) => setFeaturedExperts(e.target.value)} 
            rows={5} 
            placeholder="–í–≤–µ–¥–∏—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–ª—è –¥–µ–π—Å—Ç–≤—É—é—â–∏—Ö —ç–∫—Å–ø–µ—Ä—Ç–æ–≤"
          />
        </Form.Item>

        <Form.Item label="–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —É –Ω–∞—Å –±—ã–ª–∏ –±–∞–Ω—ã:">
          <TextArea 
            value={bannedExperts} 
            onChange={(e) => setBannedExperts(e.target.value)} 
            rows={5} 
            placeholder="–í–≤–µ–¥–∏—Ç–µ –∏–º–µ–Ω–∞ –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–∞—Ö"
          />
        </Form.Item>

        <Form.Item label="–° –∫–µ–º —Ä–∞—Å—Å—Ç–∞–ª–∏—Å—å:">
          <TextArea 
            value={removedExperts} 
            onChange={(e) => setRemovedExperts(e.target.value)} 
            rows={5} 
            placeholder="–í–≤–µ–¥–∏—Ç–µ –∏–º–µ–Ω–∞ –∏ –ø—Ä–∏—á–∏–Ω—ã —Ä–∞—Å—Å—Ç–∞–≤–∞–Ω–∏—è —Å –ø–∞—Ä—Ç–Ω—ë—Ä–∞–º–∏"
          />
        </Form.Item>

        <Form.Item>
          <Button type="primary" onClick={generateMessage} disabled={!digestNumber}>
            –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
          </Button>
        </Form.Item>
      </Form>

      {finalMessage && (
        <div style={{ marginTop: '20px' }}>
          <Title level={3}>–ò—Ç–æ–≥–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ:</Title>
          <pre style={{
            backgroundColor: '#f9f9f9',
            padding: '15px',
            borderRadius: '8px',
            border: '1px solid #ddd',
            whiteSpace: 'pre-wrap',
            wordBreak: 'break-word'
          }}>
            {finalMessage}
          </pre>
          <Button 
            type="default" 
            onClick={() => copyToClipboard(finalMessage)} 
            style={{ marginTop: '10px' }}
          >
            –ö–æ–ø–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ
          </Button>
        </div>
      )}
    </div>
  );
};

export default ExpertDigestForm;
